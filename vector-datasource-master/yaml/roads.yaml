global:
  - &osm_highway_properties
      name: {col: name}
      bridge: {col: bridge}
      layer: {col: layer}
      tunnel: {col: tunnel}
      ref: {col: ref}
      operator: {col: operator}
      route: {col: route}
      type: {col: tags->type}
      colour: {col: tags->colour}
      state: {col: tags->state}
      symbol: {col: tags->symbol}
      description: {col: tags->description}
      distance: {col: tags->distance}
      ascent: {col: tags->ascent}
      descent: {col: tags->descent}
      roundtrip: {col: tags->roundtrip}
      route_name: {col: tags->route_name}
      motor_vehicle: {col: tags->motor_vehicle}
      service: {col: service}
      sport: {col: sport}
      walking_network: {expr: "mz_hiking_network(osm_id)"}
      bicycle_network: {expr: "mz_cycling_network(tags, osm_id)"}
      oneway: {col: oneway}
      oneway_bicycle: {col: "tags->oneway:bicycle"}
      cycleway:
        expr: |
          CASE WHEN tags->'cycleway' NOT IN ('no', 'none') THEN tags->'cycleway' END
      cycleway_left:
        expr: |
          CASE WHEN tags->'cycleway:left' NOT IN ('no', 'none') THEN tags->'cycleway:left' END
      cycleway_right:
        expr: |
          CASE WHEN tags->'cycleway:right' NOT IN ('no', 'none') THEN tags->'cycleway:right' END
      cycleway_both:
        expr: |
          CASE WHEN tags->'cycleway:both' NOT IN ('no', 'none') THEN tags->'cycleway:both' END
      segregated:
        expr: |
          tags->'segregated' = 'yes'
      crossing:
        expr: |
          CASE WHEN tags->'crossing' <> 'no' THEN tags->'crossing' END
      sidewalk: {col: tags->sidewalk}
  - &osm_network_from_relation
      mz_networks: {expr: "mz_get_rel_networks(osm_id)"}
  - &osm_network_from_tags
      network: {col: tags->network}
  - &osm_piste_properties
      kind: piste
      layer: {col: layer}
      tunnel: {col: tunnel}
      oneway: {col: oneway}
      ref: {col: ref}
      operator: {col: operator}
      route: {col: route}
      type: {col: tags->type}
      colour: {col: tags->colour}
      network: {col: tags->network}
      state: {col: tags->state}
      symbol: {col: tags->symbol}
      description: {col: tags->description}
      distance: {col: tags->distance}
      ascent: {col: tags->ascent}
      descent: {col: tags->descent}
      roundtrip: {col: tags->roundtrip}
      route_name: {col: tags->route_name}
      kind_detail: {col: "tags->piste:type"}
      piste_difficulty: {col: "tags->piste:difficulty"}
      piste_grooming: {col: "tags->piste:grooming"}
      piste_name: {col: "tags->piste:name"}
      ski: {col: tags->ski}
      snowshoe: {col: tags->snowshoe}
      symbol: {col: tags->symbol}
  - &osm_footway_properties
      bicycle: {col: bicycle}
      foot: {col: foot}
      horse: {col: horse}
      tracktype: {col: tracktype}
      incline: {col: tags->incline}
      trail_visibility: {col: tags->trail_visibility}
      sac_scale: {col: tags->sac_scale}
  - &ne_properties
      name: {col: name}
      namealt: {col: namealt}
      namealtt: {col: namealtt}
      labelrank: {col: labelrank}
      level: {col: level}

# name isn't really synthetic, but we use it from both the NE and OSM
# tables, so to avoid including it twice we fake it as synthetic.
synthetic_columns:
  - name

filters:
  #############################################################
  #
  # Natural Earth roads / ferries
  #
  #############################################################

  - filter:
      scalerank: true
      featurecla: Ferry
    min_zoom: scalerank
    table: ne
    output:
      <<: *ne_properties
      kind: ferry

  - filter:
      scalerank: true
      featurecla: Road
      expressway: 1
    min_zoom: scalerank
    table: ne
    output:
      <<: *ne_properties
      kind: highway
      kind_detail: motorway
  - filter:
      scalerank: true
      featurecla: Road
      type: [Major Highway, Beltway, Bypass]
    min_zoom: scalerank
    table: ne
    output:
      <<: *ne_properties
      kind: highway
      kind_detail: trunk
  - filter:
      scalerank: true
      featurecla: Road
      type: Secondary Highway
    min_zoom: scalerank
    table: ne
    output:
      <<: *ne_properties
      kind: major_road
      kind_detail: primary
  - filter:
      scalerank: true
      featurecla: Road
      type: Road
    min_zoom: scalerank
    table: ne
    output:
      <<: *ne_properties
      kind: major_road
      kind_detail: secondary
  - filter:
      scalerank: true
      featurecla: Road
      type: [Track, Unknown]
    min_zoom: scalerank
    table: ne
    output:
      <<: *ne_properties
      kind: minor_road
      kind_detail: tertiary

  #############################################################
  #
  # OSM highway
  #
  #############################################################
  - filter:
      highway: motorway
    min_zoom: 8
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_relation
      kind: highway
      kind_detail: motorway
  - filter:
      highway: [trunk, primary]
    min_zoom: 8
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_relation
      kind: major_road
      kind_detail: {col: highway}
  - filter:
      highway: secondary
    min_zoom: 10
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_relation
      kind: major_road
      kind_detail: secondary
  - filter:
      highway: motorway_link
    min_zoom: 11
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_relation
      kind: highway
      kind_detail: motorway_link
  - filter:
      highway: tertiary
    min_zoom: 11
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_relation
      kind: major_road
      kind_detail: tertiary
  - filter:
      highway: trunk_link
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 12)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_relation
      kind: major_road
      kind_detail: trunk_link
  - filter:
      highway: [primary_link, secondary_link]
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 13)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_relation
      kind: major_road
      kind_detail: {col: highway}
  - filter:
      highway: tertiary_link
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 14)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_relation
      kind: major_road
      kind_detail: tertiary_link
  #############################################################
  #
  # OSM whitewater
  #
  # This is in the middle of the highways section so that it
  # overrides residential & service roads.
  #
  #############################################################
  - filter:
      "tags->whitewater": portage_way
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 13)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: portage_way
  #############################################################
  #
  # OSM highways (again)
  #
  #############################################################
  - filter:
      highway: [residential, unclassified, road]
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 12)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: minor_road
      kind_detail: {col: highway}
  - filter:
      highway: living_street
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 13)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: minor_road
      kind_detail: living_street
  - filter:
      highway: pedestrian
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 13)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      <<: *osm_footway_properties
      kind: path
      kind_detail: pedestrian
  - filter:
      highway: [path, track, cycleway, bridleway]
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 13)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      <<: *osm_footway_properties
      kind: path
      kind_detail: {col: highway}
  - filter:
      highway: footway
      any:
        - {name: true}
        - {bicycle: designated}
        - {foot: designated}
        - {horse: designated}
        - {tags->snowmobile: designated}
        - {tags->ski: designated}
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 13)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      <<: *osm_footway_properties
      kind: path
      kind_detail: footway
      footway: {col: tags->footway}
  - filter:
      highway: steps
      all:
        - {name: true}
        - any:
          - {bicycle: designated}
          - {foot: designated}
          - {horse: designated}
          - {tags->snowmobile: designated}
          - {tags->ski: designated}
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 13)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      <<: *osm_footway_properties
      kind: path
      kind_detail: steps
      footway: {col: tags->footway}
  - filter:
      highway: footway
      tags->footway: [sidewalk, crossing]
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 15)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      <<: *osm_footway_properties
      kind: path
      kind_detail: footway
      footway: {col: tags->footway}
  - filter:
      highway: [footway, steps]
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 14)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      <<: *osm_footway_properties
      kind: path
      kind_detail: {col: highway}
      footway: {col: tags->footway}
  - filter: {highway: corridor}
    min_zoom: 16
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      <<: *osm_footway_properties
      kind: path
      kind_detail: corridor
  - filter:
      highway: service
      service: alley
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 13)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: minor_road
      kind_detail: service
      service: alley
  - filter:
      highway: service
      service: [driveway, parking_aisle, drive-through]
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 15)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: minor_road
      kind_detail: service
      service:
        expr: |
          CASE WHEN tags->'service' = 'drive-through' THEN 'drive_through' ELSE tags->'service' END
  - filter:
      highway: service
    min_zoom: 'LEAST(mz_calculate_path_major_route(osm_id), 14)'
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: minor_road
      kind_detail: service
  - filter: {highway: raceway}
    min_zoom: 13
    table: osm
    output:
      <<: *osm_highway_properties
      kind: minor_road
      kind_detail: raceway
  #############################################################
  #
  # OSM aeroway
  #
  #############################################################
  - filter:
      aeroway: runway
    min_zoom: 9
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: aeroway
      kind_detail: runway
  - filter:
      aeroway: taxiway
    min_zoom: 11
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: aeroway
      kind_detail: taxiway
  #############################################################
  #
  # OSM railway
  #
  #############################################################
  - filter:
      railway: rail
      service: [spur, siding]
    min_zoom: 12
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: rail
      kind_detail: rail
      service: {col: service}
  - filter:
      railway: rail
      service: yard
    min_zoom: 13
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: rail
      kind_detail: rail
      service: {col: service}
  - filter:
      railway: rail
      service: crossover
    min_zoom: 15
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: rail
      kind_detail: rail
      service: {col: service}
  - filter:
      railway: rail
      service:
        - branch
        - connector
        - wye
        - runaway
        - interchange
        - switch
        - industrial
        - disused
        - driveway
        - passing_loop
    min_zoom: 15
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: rail
      kind_detail: rail
      railway: {col: railway}
      service: {col: service}
  - filter:
      railway: rail
    min_zoom: 11
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: rail
      kind_detail: rail
  - filter:
      railway: [tram, light_rail, narrow_gauge, monorail, subway, funicular]
    min_zoom: 15
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: rail
      kind_detail: {col: railway}
  #############################################################
  #
  # OSM ferry
  #
  #############################################################
  - filter:
      route: ferry
    min_zoom: "mz_calculate_ferry_level(way)"
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: ferry
  #############################################################
  #
  # OSM aerialway
  #
  #############################################################
  - filter:
      aerialway: [gondola, cable_car]
    min_zoom: 12
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: aerialway
      kind_detail: {col: aerialway}
  - filter:
      aerialway: chair_lift
    min_zoom: 13
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: aerialway
      kind_detail: {col: aerialway}
  - filter:
      aerialway:
        - drag_lift
        - platter
        - t-bar
        - goods
        - magic_carpet
        - rope_tow
        - "yes"
        - zip_line
        - j-bar
        - unknown
        - mixed_lift
        - canopy
        - cableway
    min_zoom: 15
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      kind: aerialway
      kind_detail:
        expr:
          CASE WHEN tags->'aerialway' = 't-bar' THEN 't_bar'
               WHEN tags->'aerialway' = 'j-bar' THEN 'j_bar'
               WHEN tags->'aerialway' = 'yes' THEN NULL
               ELSE tags->'aerialway' END
  #############################################################
  #
  # OSM leisure
  #
  #############################################################
  - filter:
      leisure: track
      sport:
        - athletics
        - running
        - horse_racing
        - bmx
        - disc_golf
        - cycling
        - ski_jumping
        - motor
        - karting
        - obstacle_course
        - equestrian
        - alpine_slide
        - soap_box_derby
        - mud_truck_racing
        - skiing
        - drag_racing
        - archery
    min_zoom: 14
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      # note: racetrack rather than track, as track might be confusing
      # between a track for racing and a track as in a faint trail.
      kind: racetrack
      kind_detail: {col: sport}
      leisure: track
  #############################################################
  #
  # OSM man_made
  #
  #############################################################
  - filter:
      man_made: pier
    min_zoom: 13
    table: osm
    output:
      <<: *osm_highway_properties
      <<: *osm_network_from_tags
      <<: *osm_footway_properties
      kind: path
      kind_detail: pier
  #############################################################
  #
  # OSM piste
  #
  #############################################################
  - filter:
      "tags->piste:type":
        - nordic
        - downhill
        - sleigh
        - skitour
        - hike
        - sled
        - "yes"
        - snow_park
        - playground
        - ski_jump
      not: {"tags->piste:abandoned": "yes"}
      "tags->piste:name": true
    min_zoom: 13
    table: osm
    output:
      <<: *osm_piste_properties
      name: {col: "tags->piste:name"}
  - filter:
      "tags->piste:type":
        - nordic
        - downhill
        - sleigh
        - skitour
        - hike
        - sled
        - "yes"
        - snow_park
        - playground
        - ski_jump
      not: {"tags->piste:abandoned": "yes"}
    min_zoom: 13
    table: osm
    output:
      <<: *osm_piste_properties
      name: {col: name}
